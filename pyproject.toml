[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "dielectrics"
version = "0.1.0"
authors = [{ name = "Janosh Riebesell", email = "janosh.riebesell@gmail.com" }]
description = "Data-driven search for novel dielectric materials with experimental validation"
readme = "readme.md"
keywords = [
  "data-driven materials discovery",
  "density functional theory",
  "finding new dielectric materials",
  "high-throughput",
  "machine learning",
]
dependencies = [
  "atomate",
  "fireworks",
  "matplotlib",
  "plotly",
  "pymatviz",
  "pymongo",
  "tqdm",
]

[project.urls]
Repo = "https://github.com/janosh/dielectrics"

[project.optional-dependencies]
aflow_wyckoff_labels = ["aviary"]
single_use_deps = [
  "adjustText",
  "crystal_toolkit",
  "dash",
  "robocrys",
  "scikit_learn",
  "seaborn",
]

[tool.setuptools.packages]
find = { include = ["dielectrics*"] }

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
allow_redefinition = true
no_implicit_optional = false

[tool.ruff]
target-version = "py310"
output-format = "concise"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "ANN401",
  "C408",    # unnecessary-collection-call
  "C901",
  "COM812",  # missing trailing comma
  "D100",    # Missing docstring in public module
  "D104",    # Missing docstring in public package
  "D205",    # 1 blank line required between summary line and description
  "E731",    # Do not assign a lambda expression, use a def
  "EM101",
  "EM102",
  "ERA001",  # found commented out code
  "FIX002",
  "INP001",  # implicit namespace package
  "ISC001",
  "PERF203", # try-except-in-loop
  "PLR0912", # too many branches
  "PLR0913", # too many arguments
  "PLR0915", # too many statements
  "PLR2004", # magic value comparison
  "PLW2901", # Outer for loop variable overwritten by inner assignment target
  "PTH",
  "S101",    # Use of assert detected
  "S108",
  "S311",
  "S607",
  "SIM105",  # Use contextlib.suppress(FileNotFoundError) instead of try-except-pass
  "SIM115",  # Use context handler for opening files
  "T201",    # print found
  "TD",      # TODOs
  "TRY003",
]
pydocstyle.convention = "google"
isort.lines-after-imports = 2
isort.split-on-trailing-comma = false
