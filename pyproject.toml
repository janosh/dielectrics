[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "dielectrics"
version = "0.1.0"
authors = [{ name = "Janosh Riebesell", email = "janosh@lbl.gov" }]
description = "Data-driven search for novel dielectric materials"
readme = "readme.md"
keywords = [
  "data-driven materials discovery",
  "density functional theory",
  "finding new dielectric materials",
  "high-throughput",
  "machine learning",
]
dependencies = [
  "atomate",
  "fireworks",
  "matplotlib",
  "plotly",
  "pymatviz",
  "pymongo",
  "tqdm",
]

[project.urls]
Repo = "https://github.com/janosh/dielectrics"

[project.optional-dependencies]
aflow_wyckoff_labels = ["aviary"]
single_use_deps = [
  "crystal_toolkit",
  "dash",
  "robocrys",
  "scikit_learn",
  "seaborn",
]

[tool.setuptools.packages]
find = { include = ["dielectrics*"] }

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
allow_redefinition = true
no_implicit_optional = false

[tool.ruff]
target-version = "py310"
select = [
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "D",    # pydocstyle
  "E",    # pycodestyle error
  "EXE",  # flake8-executable
  "F",    # pyflakes
  "FA",   # flake8-future-annotations
  "FLY",  # flynt
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-str-concat
  "PD",   # pandas-vet
  "PERF", # perflint
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "PYI",  # flakes8-pyi
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # Ruff-specific rules
  "SIM",  # flake8-simplify
  "SLOT", # flake8-slots
  "TCH",  # flake8-type-checking
  "TID",  # tidy imports
  "UP",   # pyupgrade
  "W",    # pycodestyle warning
  "YTT",  # flake8-2020
]
ignore = [
  "C408",    # unnecessary-collection-call
  "D100",    # Missing docstring in public module
  "D104",    # Missing docstring in public package
  "D205",    # 1 blank line required between summary line and description
  "E731",    # Do not assign a lambda expression, use a def
  "PD901",   # pandas-df-variable-name
  "PERF203", # try-except-in-loop
  "PLC0414", # useless-import-alias
  "PLR",     # pylint refactor
  "PLW2901", # Outer for loop variable overwritten by inner assignment target
  "RUF013",  # implicit-optional
  "SIM105",  # Use contextlib.suppress(FileNotFoundError) instead of try-except-pass
  "SIM115",  # Use context handler for opening files
]
pydocstyle.convention = "google"
isort.lines-after-imports = 2
isort.split-on-trailing-comma = false
